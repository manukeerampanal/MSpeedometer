h1. API

The mspeedometer currently has a very simple API, composed of few functions.

h3. <code>new MSpeedometer(element, options = {})</code>

_*Description*_: constructor
_*Purpose*_: create a new mspeedometer instance
_*Parameters*_:
* String *element*: the DOM id of the mspeedometer container
* Object *options*: an hash of options for configuration, as documented in doc/configuration.textile
 
_*Returns*_: Object - a new mspeedometer instance


h3. <code>draw()</code>

_*Description*_: main drawing function
_*Purpose*_: draw all the gauge components - background, meter, gloss, display, hand, texttitle
_*Parameters*_: none
_*Returns*_: nothing


h3. <code>update(value)</code>

_*Description*_: update the mspeedometer instance with new end value
_*Purpose*_: set the current value, move the hand, update the display
_*Parameters*_:
* Integer *end_value*: the new end_value to set
 
_*Returns*_: Integer - the end value set


h3. <code>value()</code>

_*Description*_: getter
_*Parameters*_: none
_*Returns*_: Integer - the current value of the mspeedometer instance


h3. <code>min()</code>

_*Description*_: getter
_*Parameters*_: none
_*Returns*_: Integer - the minimum value of the mspeedometer instance


h3. <code>max()</code>

_*Description*_: getter
_*Parameters*_: none
_*Returns*_: Integer - the maximum value of the mspeedometer instance


h3. <code>destroy()</code>

_*Description*_: destory the mspeedometer graph
_*Parameters*_: none
_*Returns*_: none
